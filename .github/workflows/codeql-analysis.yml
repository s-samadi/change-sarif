#This workflow is an example for code scanning c-test-proj

name: "CodeQL"

on:
  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]
  schedule:
    - cron: '34 22 * * 4'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
  
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
     
    - name: Build
      run: |
       c-test-proj/Makefile 
       
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
      with:
        upload: False
        output: sarif-results
      
    - name: Set up Python 
      uses: actions/setup-python@v2
      
     # Before uploading the database as an artifact,
      # clean up its temporary data and zip it so the artifact is a single file.
    - name: Clean up CodeQL database before upload
      id: database-cleanup
      env:
          LANGUAGE: ${{ matrix.language }}
      run: |
          set -xu
          DATABASE_DIR="/home/runner/work/_temp/codeql_databases/$LANGUAGE"
          echo "Cleaning up database in $DATABASE_DIR"
          for SUB_DIR in log results working; do
            rm -rf $DATABASE_DIR/$SUB_DIR
          done
          echo "Zipping database"
          DATABASE_ZIP="my-project-$LANGUAGE-db.zip"
          zip -r "$DATABASE_ZIP" "$DATABASE_DIR"
          echo "::set-output name=zip::$DATABASE_ZIP"
    - name: Upload CodeQL database
      uses: actions/upload-artifact@v2
      with:
          name: my-project-${{ matrix.language }}-db
          path: ${{ steps.database-cleanup.outputs.zip }}
